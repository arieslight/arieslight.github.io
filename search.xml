<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
    
    <entry>
      <title><![CDATA[初识openwrt【1】编译自己专属的固件]]></title>
      <url>http://emptycat.com/2016/07/30/openwrt%E3%80%901%E3%80%91/</url>
      <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>最近稍微研究了下openwrt，算是刚刚入门的菜鸟。今天和大家分享一下编译自己固件的方法。</p>
<h1 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h1><h2 id="设备"><a href="#设备" class="headerlink" title="设备"></a>设备</h2><p>1.一台可刷openwrt的路由器。本文以网件的wndr 4300v1为例。关于哪些设备可刷见官方设备清单</p>
<blockquote><p>支持设备清单</p><footer><strong>openwrt</strong><cite><a href="http://wiki.openwrt.org/toh/start" target="_blank" rel="external">Supported Devices</a></cite></footer></blockquote>
<p>2.一台windows操作系统或者linux系统（其实OS X也可以，主要unix和类unix系统博主没啥研究）的计算机</p>
<h2 id="Linux操作系统"><a href="#Linux操作系统" class="headerlink" title="Linux操作系统"></a>Linux操作系统</h2><p>若计算机用的是linux操作系统，则跳过Linux操作系统这一小结。<br>对于使用windows操作系统的用户来说，因为openwrt的本质是嵌入式linux系统，所以编译环境要求是linux。</p>
<p></p><h3>解决办法</h3><br>安装虚拟机，如vmware。然后在虚拟机上安装linux操作系统，OVER。<p></p>
<h1 id="部署编译环境"><a href="#部署编译环境" class="headerlink" title="部署编译环境"></a>部署编译环境</h1><p><strong>写给linux新手的话</strong>（其实我也是新手）：本文以linux的一个发行版本centos为例，官网上有安装包的命令，但多数是适用于Ubuntu等Debian系列。本文适用redhat系列的linux发行版本。（说白了就是软件包管理命令不一样，一个是yum一个是apt-get）</p>
<p>以非root用户来完成接下来的工作<br><figure class="highlight plain"><figcaption><span>安装git以下载openwrt源码</span></figcaption><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">sudo yum install update</div><div class="line">sudo yum install git-core</div></pre></td></tr></table></figure></p>
<figure class="highlight plain"><figcaption><span>feeds中部分软件包可能只能通过svn或mercurial需要用那些包的应当安装svn和mercurial(本文情况可以不用)</span></figcaption><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo yum install subversion mercurial</div></pre></td></tr></table></figure>
<figure class="highlight plain"><figcaption><span>获取安装所需软件包，以centos为例</span></figcaption><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo yum install subversion binutils bzip2 gcc gcc-c++ gawk gettext flex ncurses-devel zlib-devel make patch unzip perl-ExtUtils-MakeMaker  glibc glibc-devel glibc-static quilt ncurses-lib sed sdcc intltool sharutils bison wget git-core openssl-devel xz</div></pre></td></tr></table></figure>
<p>下载源码本文用的是最新的稳定版本Chaos Calmer15.05分支，混沌平静者？老外这个名字起的有点6<br><figure class="highlight plain"><figcaption><span>通过git下载openwrt源码</span></figcaption><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">git clone git://git.openwrt.org/15.05/openwrt.git</div></pre></td></tr></table></figure></p>
<p>打开下载的包 linux中是命令cd /XXX之类的命令 change directory的意思<br><figure class="highlight plain"><figcaption><span>下载并安装所有可用的feeds(可选，建议执行方便日后深入研究)</span></figcaption><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">cd openwrt</div><div class="line">./scripts/feeds update -a</div><div class="line">./scripts/feeds install -a</div></pre></td></tr></table></figure><br><figure class="highlight plain"><figcaption><span>运行下面的命令让OpenWrt编译系统检查你的编译环境中缺失的软件包</span></figcaption><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">make defconfig</div><div class="line">make prereq</div><div class="line">make menuconfig</div></pre></td></tr></table></figure></p>
<p>到这步无误的话就直接进入编译设置了，make menuconfig就是打开选项设置的，图形用户界面哦，对新手来说是不是很亲切。其实也可以不用图像用户界面，配置一个config文件就可以了，但本文是新手向教学所以就不赘述了，感兴趣的移步官方说明。<br><blockquote><p>官方编译说明</p><footer><strong>openwrt</strong><cite><a href="https://wiki.openwrt.org/doc/howto/build" target="_blank" rel="external">build system</a></cite></footer></blockquote></p>
<h1 id="配置编译选项，选择目标硬件平台和要包含的软件包"><a href="#配置编译选项，选择目标硬件平台和要包含的软件包" class="headerlink" title="配置编译选项，选择目标硬件平台和要包含的软件包"></a>配置编译选项，选择目标硬件平台和要包含的软件包</h1><p>如下图所示图形用户界面</p>
<p><img src="/images/op.png" alt=""><br>本文以wndr4300 v1为例<br>选择目标平台:</p>
<h2 id="cpu芯片组系列"><a href="#cpu芯片组系列" class="headerlink" title="cpu芯片组系列"></a>cpu芯片组系列</h2><p>选择Target System进入，如下图所示：<br>选择你硬件的cpu芯片系列<br><img src="/images/1.png" alt=""></p>
<h2 id="存储设备规格"><a href="#存储设备规格" class="headerlink" title="存储设备规格"></a>存储设备规格</h2><p>选择Subtarget<br>选择你硬件的闪存规格<br><img src="/images/2.png" alt=""></p>
<h2 id="硬件对应的配置文件"><a href="#硬件对应的配置文件" class="headerlink" title="硬件对应的配置文件"></a>硬件对应的配置文件</h2><p>选择Target profile<br>选择你的设备型号<br><img src="/images/3.png" alt=""></p>
<h2 id="选择你要包含的软件包"><a href="#选择你要包含的软件包" class="headerlink" title="选择你要包含的软件包"></a>选择你要包含的软件包</h2><p>此处以Luci为例，Luci是一个可视化的op管理程序，使一般普通用户直接通过浏览器来设置路由器，而不是通过linux 命令行。<br>选择LuCI–Collections<br>使用*选择luci 与 luci-ssl<br><img src="/images/4.png" alt=""><br>选择Luci–Modules—&gt;Translatons—&gt;Chinese(zh-cn)添加简体中文语言包<br><img src="/images/5.png" alt=""></p>
<h2 id="保存后退出"><a href="#保存后退出" class="headerlink" title="保存后退出"></a>保存后退出</h2><p>Save后一步步走然后退出</p>
<h1 id="写在编译前，修改flash闪存容量"><a href="#写在编译前，修改flash闪存容量" class="headerlink" title="写在编译前，修改flash闪存容量"></a>写在编译前，修改flash闪存容量</h1><p>wndr4300是128MBflash闪存的配置若用官方的固件包刷就只有13MB可用，原因是官方在编译的时候限制了闪存容量。当下我们自己编译固件则可以充分发挥性能，方便日后安装更多的程序拓展op的功能。修改的方法如下：<br>进入源码文件openwrt目录下，然后修改配置文件</p>
<figure class="highlight plain"><figcaption><span>先备份再用vim修改编译文件</span></figcaption><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">cp ./target/linux/ar71xx/image/Makefile ./target/linux/ar71xx/image/Makefile.bak</div><div class="line">vim ./target/linux/ar71xx/image/Makefile</div></pre></td></tr></table></figure>
<p>将<br>wndr4300_mtdlayout=mtdparts=ar934x-nfc:256k(u-boot)ro,256k(u-boot-env)ro,256k(caldata),512k(pot),2048k(language),512k(config),3072k(traffic_meter),2048k(kernel),<br><strong>23552k(ubi),25600k@0x6c0000(firmware)</strong>,256k(caldata_backup),-(reserved)<br>改为（将ubi和firmware增加96M，完全使用128M flash）<br>wndr4300_mtdlayout=mtdparts=ar934x-nfc:256k(u-boot)ro,256k(u-boot-env)ro,256k(caldata),512k(pot),2048k(language),512k(config),3072k(traffic_meter),2048k(kernel),<br><strong>121856k(ubi),123904k@0x6c0000(firmware)</strong>,256k(caldata_backup),-(reserved)</p>
<h1 id="编译"><a href="#编译" class="headerlink" title="编译"></a>编译</h1><figure class="highlight plain"><figcaption><span>执行命令编译固件make就可以了加V=99是为了显示具体信息</span></figcaption><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">make V=99</div></pre></td></tr></table></figure>
<p>然后是漫长的等待，取决于你机器的性能和网速。真机估计要两个小时左右，我笔记本的配置应该说算是很高了，在虚拟机里编译了4个多小时</p>
<p>编译好的文件在你openwrt目录下的bin目录下，以ubi-factory.img结尾的是固件sysupgrade.tar结尾的是升级包</p>
<h1 id="END"><a href="#END" class="headerlink" title="END"></a>END</h1><p>链接：<a href="http://pan.baidu.com/s/1bJIDFw" target="_blank" rel="external">http://pan.baidu.com/s/1bJIDFw</a> 密码：kb1z<br>链接：<a href="http://pan.baidu.com/s/1eSJkLP4" target="_blank" rel="external">http://pan.baidu.com/s/1eSJkLP4</a> 密码：sors</p>]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[试用期工资基本败光了]]></title>
      <url>http://emptycat.com/2016/07/30/show/</url>
      <content type="html"><![CDATA[<h1 id="晒几件最近买的硬件"><a href="#晒几件最近买的硬件" class="headerlink" title="晒几件最近买的硬件"></a>晒几件最近买的硬件</h1><hr>

<p><img src="/images/160730.jpg" alt=""></p>
<a id="more"></a>
<h2 id="莱斯的移动硬盘"><a href="#莱斯的移动硬盘" class="headerlink" title="莱斯的移动硬盘"></a>莱斯的移动硬盘</h2><p>容量1TB，莱斯早就被希捷收购了，所以毫无疑问是希捷的芯。特点是质量好，抗摔、抗震、短暂防水，苹果外设认证，红点设计奖外观赞，还有贵~~</p>
<h2 id="雷克萨的U盘"><a href="#雷克萨的U盘" class="headerlink" title="雷克萨的U盘"></a>雷克萨的U盘</h2><p>镁光旗下品牌，128GB,MLC颗粒的闪存，群联的主控。特点：快！！！（吐槽一下，前代P10是信仰级的SLC，这代P20变镁光自家的MLC了。虽然不是廉价的TLC，但信仰减半。另外国内正规电商目前只有64G版，且64G的卖的竟然比美亚128G的还贵！！！果断海淘）</p>
<h2 id="影拓的数位板"><a href="#影拓的数位板" class="headerlink" title="影拓的数位板"></a>影拓的数位板</h2><p>intuos pro 小板，2048级压感，60度倾斜感应，冲动型消费。什么都不说了，教练我想学画画。</p>]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[HelloWord（测试）]]></title>
      <url>http://emptycat.com/2016/07/29/HELLOWORD/</url>
      <content type="html"><![CDATA[<p>你好世界<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">alert(&apos;Hello World!&apos;);</div></pre></td></tr></table></figure><br><a id="more"></a></p>
<p><table><br>    <tr><br>        <td>Foolish</td><br>    </tr><br></table></p>
<iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width="330" height="86" src="http://music.163.com/outchain/player?type=2&id=34586882&auto=1&height=66"></iframe>]]></content>
    </entry>
    
  
  
</search>
