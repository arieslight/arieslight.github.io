<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>扇子先生&#39;s Blog</title>
  <subtitle>something nothing</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://emptycat.com/"/>
  <updated>2016-09-20T15:23:40.641Z</updated>
  <id>http://emptycat.com/</id>
  
  <author>
    <name>MR_FAN</name>
    <email>aries.fan@live.com</email>
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>初识openwrt[2]将openwrt固件刷入路由器</title>
    <link href="http://emptycat.com/2016/09/20/%E5%88%9D%E8%AF%86openwrt-2-%E5%B0%86openwrt%E5%9B%BA%E4%BB%B6%E5%88%B7%E5%85%A5%E8%B7%AF%E7%94%B1%E5%99%A8/"/>
    <id>http://emptycat.com/2016/09/20/初识openwrt-2-将openwrt固件刷入路由器/</id>
    <published>2016-09-20T15:07:03.000Z</published>
    <updated>2016-09-20T15:23:40.641Z</updated>
    
    <content type="html"><![CDATA[<h1 id="前沿"><a href="#前沿" class="headerlink" title="前沿"></a>前沿</h1><p>米娜桑，好久不见。之前写过一篇博客是教大家如何编译自己专属的openwrt固件的，至于如何将固件刷入路由器这一篇跳票已久。今天，就来将来填这个坑。<br>本文已网件的wndr4300路由器为例。</p>
<h1 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h1><p>1.上篇编译的固件.<br>2.网件wndr4300路由器<br>3.装载windows的pc</p>
<h1 id="刷入固件的方法"><a href="#刷入固件的方法" class="headerlink" title="刷入固件的方法"></a>刷入固件的方法</h1><h2 id="启动win自带tftp功能"><a href="#启动win自带tftp功能" class="headerlink" title="启动win自带tftp功能"></a>启动win自带tftp功能</h2><p>打开windows自带的tftp客户端功能。方法如下图：<br><img src="/2016/09/20/初识openwrt-2-将openwrt固件刷入路由器/1.png" alt="控制面板-程序-启动或关闭windows功能-勾选tftp" title="控制面板-程序-启动或关闭windows功能-勾选tftp"></p>
<h2 id="开刷"><a href="#开刷" class="headerlink" title="开刷"></a>开刷</h2><p>1.将固件复制到c盘根目录（不一定得放在这只是为了新手方便，懂的人自然懂，不多解释）<br>2.win键+R键输入cmd回车打开命令行。输入 ping 192.168.1.1 -t<br>3.电脑改固定ip192.168.1.2网关255.255.255.0<br>4.断电，按掉路由器的那个电源开关<br>  用尖针按住路由器后面的复位键，不松手<br>5.通电。等待电源灯从 黄灯变为绿灯然后绿灯一直闪烁，然后松开复位键。<br>6.再开一个命令行，输入cd c:\<br>        输入tftp -i 192.168.1.1 PUT 4300.img(此处的4300为固件的名称，以你的固件名为准)<br>        等待几分钟<br>        当地一个cmd中能持续ping同至少10s以上时说明刷入完成<br>7.直接拔电源插座，然后关掉路由器开关等待5s左右插上插座等待5s左右打开路由器开关（不是必须的但是不这么做有可能刷完开不了5G信号，若无5G信号其实再重启一下也可以）</p>
<iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width="330" height="86" src="http://music.163.com/outchain/player?type=2&id=33471935&auto=1&height=66"></iframe>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;前沿&quot;&gt;&lt;a href=&quot;#前沿&quot; class=&quot;headerlink&quot; title=&quot;前沿&quot;&gt;&lt;/a&gt;前沿&lt;/h1&gt;&lt;p&gt;米娜桑，好久不见。之前写过一篇博客是教大家如何编译自己专属的openwrt固件的，至于如何将固件刷入路由器这一篇跳票已久。今天，就来将来填这
    
    </summary>
    
      <category term="嵌入式Linux" scheme="http://emptycat.com/categories/%E5%B5%8C%E5%85%A5%E5%BC%8FLinux/"/>
    
    
      <category term="-openwrt -刷入固件" scheme="http://emptycat.com/tags/openwrt-%E5%88%B7%E5%85%A5%E5%9B%BA%E4%BB%B6/"/>
    
  </entry>
  
  <entry>
    <title>Hexo搭建专属博客（2）-搭建hexo环境并部署到本地</title>
    <link href="http://emptycat.com/2016/08/13/Hexo%E6%90%AD%E5%BB%BA%E4%B8%93%E5%B1%9E%E5%8D%9A%E5%AE%A2%EF%BC%882%EF%BC%89-%E6%90%AD%E5%BB%BAhexo%E7%8E%AF%E5%A2%83%E5%B9%B6%E9%83%A8%E7%BD%B2%E5%88%B0%E6%9C%AC%E5%9C%B0/"/>
    <id>http://emptycat.com/2016/08/13/Hexo搭建专属博客（2）-搭建hexo环境并部署到本地/</id>
    <published>2016-08-13T12:00:11.000Z</published>
    <updated>2016-09-20T15:19:24.524Z</updated>
    
    <content type="html"><![CDATA[<p><hr></p>
<h1 id="搭建Hexo环境"><a href="#搭建Hexo环境" class="headerlink" title="搭建Hexo环境"></a>搭建Hexo环境</h1><p>安装Hexo相当简单，但在安装前，您必须搭建环境。本文以windows下为例。</p>
<h2 id="安装前提"><a href="#安装前提" class="headerlink" title="安装前提"></a>安装前提</h2><p>检查电脑中是否已安装下列应用程序：<br><a href="https://nodejs.org/en/" target="_blank" rel="external">Node.js</a><br><a href="https://git-scm.com/" target="_blank" rel="external">Git</a><br>如果已安装则跳过安装前提小结直接从安装Hexo继续看。如果未安装，请安装。</p>
<p></p><h3>安装Node.js</h3><br>下载<a href="https://nodejs.org/en/" target="_blank" rel="external">Node.js</a>并安装。<p></p>
<p></p><h3>安装Git</h3><br>下载<a href="https://git-scm.com/download/win" target="_blank" rel="external">Git</a>并安装。<br><a id="more"></a><p></p>
<h1 id="安装Hexo"><a href="#安装Hexo" class="headerlink" title="安装Hexo"></a>安装Hexo</h1><p>部署好前提环境后，则可使用npm安装Hexo。<br>在桌面或任意文件夹中，鼠标单击右键，在弹出的菜单中你会发现安装Git后多了Git GUI Here和Git Bash Here两项。<br><img src="/2016/08/13/Hexo搭建专属博客（2）-搭建hexo环境并部署到本地/menu.png" alt="右击出现的menu" title="右击出现的menu"><br>点击Git Bash Here，出现如下窗口。<br><img src="/2016/08/13/Hexo搭建专属博客（2）-搭建hexo环境并部署到本地/Bash.png" alt="Bash窗口" title="Bash窗口"><br>在Bash命令行中输入命令如下：<br><figure class="highlight plain"><figcaption><span>使用npm安装Hexo</span></figcaption><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ npm install -g hexo-cli</div></pre></td></tr></table></figure></p>
<h1 id="部署Hexo到本地计算机"><a href="#部署Hexo到本地计算机" class="headerlink" title="部署Hexo到本地计算机"></a>部署Hexo到本地计算机</h1><h2 id="执行命令建站"><a href="#执行命令建站" class="headerlink" title="执行命令建站"></a>执行命令建站</h2><figure class="highlight plain"><figcaption><span>&lt;folder&gt;为站点资源所在文件夹名</span></figcaption><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">$ hexo init &lt;folder&gt;</div><div class="line">$ cd &lt;folder&gt;</div><div class="line">$ npm install</div></pre></td></tr></table></figure>
<h2 id="不习惯命令行的朋友看这里"><a href="#不习惯命令行的朋友看这里" class="headerlink" title="不习惯命令行的朋友看这里"></a>不习惯命令行的朋友看这里</h2><p>如果不习惯用命令的话，则选择硬盘任意位置新建一个文件夹（推荐全英文路径避免日后遇到未知问题）。如在D:/路径下新建文件夹Hexo.<br>打开Hexo文件夹，右击出现菜单点击Git Bash Here。在Bash命令行中输入如下命令：<br><figure class="highlight plain"><figcaption><span>建站命令</span></figcaption><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ npm install</div></pre></td></tr></table></figure></p>
<h1 id="本地运行"><a href="#本地运行" class="headerlink" title="本地运行"></a>本地运行</h1><p>使用命令：<br>hexo generate<br>hexo server<br>部署到本地。<br><figure class="highlight plain"><figcaption><span>generate可简写成g,server可简写成s</span></figcaption><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">$ hexo g  </div><div class="line">$ hexo s</div></pre></td></tr></table></figure></p>
<h1 id="查看部署本地是否成功"><a href="#查看部署本地是否成功" class="headerlink" title="查看部署本地是否成功"></a>查看部署本地是否成功</h1><p>在浏览器中输入<a href="http://localhost:4000/" target="_blank" rel="external">http://localhost:4000/</a><br>则可查看部署到本地的你的专属blog那<br><img src="/2016/08/13/Hexo搭建专属博客（2）-搭建hexo环境并部署到本地/browser.png" alt="浏览器查看您的blog" title="浏览器查看您的blog"></p>
<p><hr><br>*资料来源于网络</p>
<iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width="330" height="86" src="http://music.163.com/outchain/player?type=2&id=33556489&auto=1&height=66"></iframe>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;hr&gt;&lt;/p&gt;
&lt;h1 id=&quot;搭建Hexo环境&quot;&gt;&lt;a href=&quot;#搭建Hexo环境&quot; class=&quot;headerlink&quot; title=&quot;搭建Hexo环境&quot;&gt;&lt;/a&gt;搭建Hexo环境&lt;/h1&gt;&lt;p&gt;安装Hexo相当简单，但在安装前，您必须搭建环境。本文以windows下为例。&lt;/p&gt;
&lt;h2 id=&quot;安装前提&quot;&gt;&lt;a href=&quot;#安装前提&quot; class=&quot;headerlink&quot; title=&quot;安装前提&quot;&gt;&lt;/a&gt;安装前提&lt;/h2&gt;&lt;p&gt;检查电脑中是否已安装下列应用程序：&lt;br&gt;&lt;a href=&quot;https://nodejs.org/en/&quot;&gt;Node.js&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://git-scm.com/&quot;&gt;Git&lt;/a&gt;&lt;br&gt;如果已安装则跳过安装前提小结直接从安装Hexo继续看。如果未安装，请安装。&lt;/p&gt;
&lt;p&gt;&lt;h3&gt;安装Node.js&lt;/h3&gt;&lt;br&gt;下载&lt;a href=&quot;https://nodejs.org/en/&quot;&gt;Node.js&lt;/a&gt;并安装。&lt;/p&gt;
&lt;p&gt;&lt;h3&gt;安装Git&lt;/h3&gt;&lt;br&gt;下载&lt;a href=&quot;https://git-scm.com/download/win&quot;&gt;Git&lt;/a&gt;并安装。&lt;br&gt;
    
    </summary>
    
      <category term="Hexo" scheme="http://emptycat.com/categories/Hexo/"/>
    
    
      <category term="IT" scheme="http://emptycat.com/tags/IT/"/>
    
      <category term="Hexo" scheme="http://emptycat.com/tags/Hexo/"/>
    
      <category term="blog" scheme="http://emptycat.com/tags/blog/"/>
    
  </entry>
  
  <entry>
    <title>Hexo搭建专属博客（1）--hexo简介</title>
    <link href="http://emptycat.com/2016/08/11/Hexo%E6%90%AD%E5%BB%BA%E4%B8%93%E5%B1%9E%E5%8D%9A%E5%AE%A2%EF%BC%881%EF%BC%89-hexo%E7%AE%80%E4%BB%8B/"/>
    <id>http://emptycat.com/2016/08/11/Hexo搭建专属博客（1）-hexo简介/</id>
    <published>2016-08-10T17:03:04.000Z</published>
    <updated>2016-08-13T12:56:55.966Z</updated>
    
    <content type="html"><![CDATA[<p><hr></p>
<h1 id="什么时Hexo"><a href="#什么时Hexo" class="headerlink" title="什么时Hexo?"></a>什么时Hexo?</h1><p>Hexo是Node.js驱动的快速高效简洁的开源博客框架。作者是台湾大学生<a href="https://github.com/hexojs/hexo" target="_blank" rel="external">tommy351</a> 。<br><a id="more"></a></p>
<h1 id="Hexo-的特点"><a href="#Hexo-的特点" class="headerlink" title="Hexo 的特点"></a>Hexo 的特点</h1><h2 id="超快速度"><a href="#超快速度" class="headerlink" title="超快速度"></a>超快速度</h2><p>Node.js 所带来的超快生成速度，让上百个页面在几秒内瞬间完成渲染。</p>
<h2 id="支持-Markdown"><a href="#支持-Markdown" class="headerlink" title="支持 Markdown"></a>支持 Markdown</h2><p>Hexo 支持 GitHub Flavored Markdown 的所有功能，甚至可以整合 Octopress 的大多数插件。</p>
<h2 id="一键部署"><a href="#一键部署" class="headerlink" title="一键部署"></a>一键部署</h2><p>只需一条指令即可部署到 GitHub Pages, Heroku 或其他网站。</p>
<h2 id="丰富的插件"><a href="#丰富的插件" class="headerlink" title="丰富的插件"></a>丰富的插件</h2><p>Hexo 拥有强大的插件系统，安装插件可以让 Hexo 支持 Jade, CoffeeScript。</p>
<h1 id="扇子先生的使用心得（其实是闲聊那）"><a href="#扇子先生的使用心得（其实是闲聊那）" class="headerlink" title="扇子先生的使用心得（其实是闲聊那）"></a>扇子先生的使用心得（其实是闲聊那）</h1><p>米娜桑，好久不见。今天出差刚回来就来更一篇博客是不是很感动啊！！！哈哈哈，其实并没有人看。上次说了openwrt，博主是一个坑没填完就又开了另一个坑了。<br>各位放心，之前说的openwrt固件如何刷入路由器肯定是会更新的。面包会有的爱情也是会有的，所以博客那更是会有的那。咳咳，扯远了回归正题吧。<br>新开一坑教教大家如何搭建自己的专属博客，当然框架用的是Hexo,至于为什么了？因为博主的博客就是Hexo搭建的啊混蛋。<br>Hexo嘛，其实我就是个新手那。markdown标记语言写博客是不是很炫酷那（其实并没有），讲真用习惯了也还好而且Markdown本身支持内置html,也就是说理论上只会写html就能用Markdown写出很多博客样式出来。<br>搭建环境也很简单，这周末教大家如何搭建与部署到github，有域名的还可以像博主一样用自己的域名哦。<br>因为博主本身就是个计算机菜鸟，非科班出生，一切都是自己玩出来的。所以技术型博客大多是新手教学项的那，目前暂定环境为windows。有想看linux的也可以，但你如果属于是想看linux的那还用来看博主的博客嘛混蛋。<br>以后还会更很多乱七八糟的非技术型博客，因为毕竟博主是Master嘛。<br>顺道说一下哈，博主的偶像久远的是老庄杨朱与亚里士多德，新点的是达芬奇。所以，有大触收徒教画画嘛~~</p>
<p><hr><br>*资料来源于网络</p>
<iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width="330" height="86" src="http://music.163.com/outchain/player?type=2&id=409654891&auto=1&height=66"></iframe>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;hr&gt;&lt;/p&gt;
&lt;h1 id=&quot;什么时Hexo&quot;&gt;&lt;a href=&quot;#什么时Hexo&quot; class=&quot;headerlink&quot; title=&quot;什么时Hexo?&quot;&gt;&lt;/a&gt;什么时Hexo?&lt;/h1&gt;&lt;p&gt;Hexo是Node.js驱动的快速高效简洁的开源博客框架。作者是台湾大学生&lt;a href=&quot;https://github.com/hexojs/hexo&quot;&gt;tommy351&lt;/a&gt; 。&lt;br&gt;
    
    </summary>
    
      <category term="Hexo" scheme="http://emptycat.com/categories/Hexo/"/>
    
    
      <category term="IT" scheme="http://emptycat.com/tags/IT/"/>
    
      <category term="Hexo" scheme="http://emptycat.com/tags/Hexo/"/>
    
      <category term="blog" scheme="http://emptycat.com/tags/blog/"/>
    
  </entry>
  
  <entry>
    <title>初识openwrt【1】编译自己专属的固件</title>
    <link href="http://emptycat.com/2016/07/30/openwrt%E3%80%901%E3%80%91/"/>
    <id>http://emptycat.com/2016/07/30/openwrt【1】/</id>
    <published>2016-07-30T11:17:21.000Z</published>
    <updated>2016-08-10T17:41:12.784Z</updated>
    
    <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>最近稍微研究了下openwrt，算是刚刚入门的菜鸟。今天和大家分享一下编译自己固件的方法。<br>其中可能涉及到一些linux的基本操作、vmware安装linux等，会在以后一一与大家分享<br>关于固件如何刷入路由器，明天要加班所以今天就不说了，博主有时间会尽快更新的。</p>
<a id="more"></a>
<h1 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h1><h2 id="设备"><a href="#设备" class="headerlink" title="设备"></a>设备</h2><p>1.一台可刷openwrt的路由器。本文以网件的wndr 4300v1为例。关于哪些设备可刷见官方设备清单</p>
<blockquote><p>支持设备清单</p><footer><strong>openwrt</strong><cite><a href="http://wiki.openwrt.org/toh/start" target="_blank" rel="external">Supported Devices</a></cite></footer></blockquote>
<p>2.一台windows操作系统或者linux系统（其实OS X也可以，主要unix和类unix系统博主没啥研究）的计算机</p>
<h2 id="Linux操作系统"><a href="#Linux操作系统" class="headerlink" title="Linux操作系统"></a>Linux操作系统</h2><p>若计算机用的是linux操作系统，则跳过Linux操作系统这一小结。<br>对于使用windows操作系统的用户来说，因为openwrt的本质是嵌入式linux系统，所以编译环境要求是linux。</p>
<p></p><h3>解决办法</h3><br>安装虚拟机，如vmware。然后在虚拟机上安装linux操作系统，OVER。<p></p>
<h1 id="部署编译环境"><a href="#部署编译环境" class="headerlink" title="部署编译环境"></a>部署编译环境</h1><p><strong>写给linux新手的话</strong>（其实我也是新手）：本文以linux的一个发行版本centos为例，官网上有安装包的命令，但多数是适用于Ubuntu等Debian系列。本文适用redhat系列的linux发行版本。（说白了就是软件包管理命令不一样，一个是yum一个是apt-get）</p>
<p>以非root用户来完成接下来的工作<br><figure class="highlight plain"><figcaption><span>安装git以下载openwrt源码</span></figcaption><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">sudo yum install update</div><div class="line">sudo yum install git-core</div></pre></td></tr></table></figure></p>
<figure class="highlight plain"><figcaption><span>feeds中部分软件包可能只能通过svn或mercurial需要用那些包的应当安装svn和mercurial(本文情况可以不用)</span></figcaption><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo yum install subversion mercurial</div></pre></td></tr></table></figure>
<figure class="highlight plain"><figcaption><span>获取安装所需软件包，以centos为例</span></figcaption><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo yum install subversion binutils bzip2 gcc gcc-c++ gawk gettext flex ncurses-devel zlib-devel make patch unzip perl-ExtUtils-MakeMaker  glibc glibc-devel glibc-static quilt ncurses-lib sed sdcc intltool sharutils bison wget git-core openssl-devel xz</div></pre></td></tr></table></figure>
<p>下载源码本文用的是最新的稳定版本Chaos Calmer15.05分支，混沌平静者？老外这个名字起的有点6<br><figure class="highlight plain"><figcaption><span>通过git下载openwrt源码</span></figcaption><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">git clone git://git.openwrt.org/15.05/openwrt.git</div></pre></td></tr></table></figure></p>
<p>打开下载的包 linux中是命令cd /XXX之类的命令 change directory的意思<br><figure class="highlight plain"><figcaption><span>下载并安装所有可用的feeds(可选，建议执行方便日后深入研究)</span></figcaption><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">cd openwrt</div><div class="line">./scripts/feeds update -a</div><div class="line">./scripts/feeds install -a</div></pre></td></tr></table></figure></p>
<figure class="highlight plain"><figcaption><span>运行下面的命令让OpenWrt编译系统检查你的编译环境中缺失的软件包</span></figcaption><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">make defconfig</div><div class="line">make prereq</div><div class="line">make menuconfig</div></pre></td></tr></table></figure>
<p>到这步无误的话就直接进入编译设置了，make menuconfig就是打开选项设置的，图形用户界面哦，对新手来说是不是很亲切。其实也可以不用图像用户界面，配置一个config文件就可以了，但本文是新手向教学所以就不赘述了，感兴趣的移步官方说明。<br><blockquote><p>官方编译说明</p><footer><strong>openwrt</strong><cite><a href="https://wiki.openwrt.org/doc/howto/build" target="_blank" rel="external">build system</a></cite></footer></blockquote></p>
<h1 id="配置编译选项，选择目标硬件平台和要包含的软件包"><a href="#配置编译选项，选择目标硬件平台和要包含的软件包" class="headerlink" title="配置编译选项，选择目标硬件平台和要包含的软件包"></a>配置编译选项，选择目标硬件平台和要包含的软件包</h1><p>如下图所示图形用户界面</p>
<p><img src="/images/op.png" alt=""><br>本文以wndr4300 v1为例<br>选择目标平台:</p>
<h2 id="cpu芯片组系列"><a href="#cpu芯片组系列" class="headerlink" title="cpu芯片组系列"></a>cpu芯片组系列</h2><p>选择Target System进入，如下图所示：<br>选择你硬件的cpu芯片系列<br><img src="/images/1.png" alt=""></p>
<h2 id="存储设备规格"><a href="#存储设备规格" class="headerlink" title="存储设备规格"></a>存储设备规格</h2><p>选择Subtarget<br>选择你硬件的闪存规格<br><img src="/images/2.png" alt=""></p>
<h2 id="硬件对应的配置文件"><a href="#硬件对应的配置文件" class="headerlink" title="硬件对应的配置文件"></a>硬件对应的配置文件</h2><p>选择Target profile<br>选择你的设备型号<br><img src="/images/3.png" alt=""></p>
<h2 id="选择你要包含的软件包"><a href="#选择你要包含的软件包" class="headerlink" title="选择你要包含的软件包"></a>选择你要包含的软件包</h2><p>此处以Luci为例，Luci是一个可视化的op管理程序，使一般普通用户直接通过浏览器来设置路由器，而不是通过linux 命令行。<br>选择LuCI–Collections<br>使用*选择luci 与 luci-ssl<br><img src="/images/4.png" alt=""><br>选择Luci–Modules—&gt;Translatons—&gt;Chinese(zh-cn)添加简体中文语言包<br><img src="/images/5.png" alt=""></p>
<h2 id="保存后退出"><a href="#保存后退出" class="headerlink" title="保存后退出"></a>保存后退出</h2><p>Save后一步步走然后退出</p>
<h1 id="写在编译前，修改flash闪存容量"><a href="#写在编译前，修改flash闪存容量" class="headerlink" title="写在编译前，修改flash闪存容量"></a>写在编译前，修改flash闪存容量</h1><figure class="highlight plain"><figcaption><span>先备份再用vim修改编译文件</span></figcaption><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">cp ./target/linux/ar71xx/image/Makefile ./target/linux/ar71xx/image/Makefile.bak</div><div class="line">vim ./target/linux/ar71xx/image/Makefile</div></pre></td></tr></table></figure>
<p>wndr4300是128MBflash闪存的配置若用官方的固件包刷就只有13MB可用，原因是官方在编译的时候限制了闪存容量。当下我们自己编译固件则可以充分发挥性能，方便日后安装更多的程序拓展op的功能。修改的方法如下：<br>进入源码文件openwrt目录下，然后修改配置文件<br>将<br>wndr4300_mtdlayout=mtdparts=ar934x-nfc:256k(u-boot)ro,256k(u-boot-env)ro,256k(caldata),512k(pot),2048k(language),512k(config),3072k(traffic_meter),2048k(kernel),<br><strong>23552k(ubi),25600k@0x6c0000(firmware)</strong>,256k(caldata_backup),-(reserved)<br>改为（将ubi和firmware增加96M，完全使用128M flash）<br>wndr4300_mtdlayout=mtdparts=ar934x-nfc:256k(u-boot)ro,256k(u-boot-env)ro,256k(caldata),512k(pot),2048k(language),512k(config),3072k(traffic_meter),2048k(kernel),<br><strong>121856k(ubi),123904k@0x6c0000(firmware)</strong>,256k(caldata_backup),-(reserved)</p>
<h1 id="编译"><a href="#编译" class="headerlink" title="编译"></a>编译</h1><figure class="highlight plain"><figcaption><span>执行命令编译固件make就可以了加V=99是为了显示具体信息</span></figcaption><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">make V=99</div></pre></td></tr></table></figure>
<p>然后是漫长的等待，取决于你机器的性能和网速。真机估计要两个小时左右，我笔记本的配置应该说算是很高了，在虚拟机里编译了4个多小时</p>
<p>编译好的文件在你openwrt目录下的bin目录下，以ubi-factory.img结尾的是固件sysupgrade.tar结尾的是升级包</p>
<h1 id="END"><a href="#END" class="headerlink" title="END"></a>END</h1><p>最后奉上博主编译的固件有网件wndr4300v1 或 wndr3700v4路由器的可以下载下来使用，<br>编译的固件超纯净版，较最小包只有如下两处改动<br>1.将存储空间增加到128M<br>2.添加中文LuCI<br>wndr3700v4链接：<a href="http://pan.baidu.com/s/1bJIDFw" target="_blank" rel="external">http://pan.baidu.com/s/1bJIDFw</a> 密码：kb1z<br>wndr4300v1链接：<a href="http://pan.baidu.com/s/1eSJkLP4" target="_blank" rel="external">http://pan.baidu.com/s/1eSJkLP4</a> 密码：sors</p>
<p><hr></p>
<iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width="330" height="86" src="http://music.163.com/outchain/player?type=2&id=405681663&auto=1&height=66"></iframe>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h1&gt;&lt;p&gt;最近稍微研究了下openwrt，算是刚刚入门的菜鸟。今天和大家分享一下编译自己固件的方法。&lt;br&gt;其中可能涉及到一些linux的基本操作、vmware安装linux等，会在以后一一与大家分享&lt;br&gt;关于固件如何刷入路由器，明天要加班所以今天就不说了，博主有时间会尽快更新的。&lt;/p&gt;
    
    </summary>
    
      <category term="嵌入式Linux" scheme="http://emptycat.com/categories/%E5%B5%8C%E5%85%A5%E5%BC%8FLinux/"/>
    
    
      <category term="openwrt" scheme="http://emptycat.com/tags/openwrt/"/>
    
      <category term="编译固件" scheme="http://emptycat.com/tags/%E7%BC%96%E8%AF%91%E5%9B%BA%E4%BB%B6/"/>
    
  </entry>
  
  <entry>
    <title>试用期工资基本败光了</title>
    <link href="http://emptycat.com/2016/07/30/show/"/>
    <id>http://emptycat.com/2016/07/30/show/</id>
    <published>2016-07-30T10:27:43.000Z</published>
    <updated>2016-08-07T07:25:33.184Z</updated>
    
    <content type="html"><![CDATA[<h1 id="晒几件最近买的硬件"><a href="#晒几件最近买的硬件" class="headerlink" title="晒几件最近买的硬件"></a>晒几件最近买的硬件</h1><hr>

<p><img src="/images/160730.jpg" alt=""></p>
<a id="more"></a>
<h2 id="莱斯的移动硬盘"><a href="#莱斯的移动硬盘" class="headerlink" title="莱斯的移动硬盘"></a>莱斯的移动硬盘</h2><p>容量1TB，莱斯早就被希捷收购了，所以毫无疑问是希捷的芯。特点是质量好，抗摔、抗震、短暂防水，苹果外设认证，红点设计奖外观赞，还有贵~~</p>
<h2 id="雷克萨的U盘"><a href="#雷克萨的U盘" class="headerlink" title="雷克萨的U盘"></a>雷克萨的U盘</h2><p>镁光旗下品牌，128GB,MLC颗粒的闪存，群联的主控。特点：快！！！（吐槽一下，前代P10是信仰级的SLC，这代P20变镁光自家的MLC了。虽然不是廉价的TLC，但信仰减半。另外国内正规电商目前只有64G版，且64G的卖的竟然比美亚128G的还贵！！！果断海淘）</p>
<h2 id="影拓的数位板"><a href="#影拓的数位板" class="headerlink" title="影拓的数位板"></a>影拓的数位板</h2><p>intuos pro 小板，2048级压感，60度倾斜感应，无线连接，冲动型消费。什么都不说了，教练我想学画画。</p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;晒几件最近买的硬件&quot;&gt;&lt;a href=&quot;#晒几件最近买的硬件&quot; class=&quot;headerlink&quot; title=&quot;晒几件最近买的硬件&quot;&gt;&lt;/a&gt;晒几件最近买的硬件&lt;/h1&gt;&lt;hr&gt;

&lt;p&gt;&lt;img src=&quot;/images/160730.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="晒照片" scheme="http://emptycat.com/categories/%E6%99%92%E7%85%A7%E7%89%87/"/>
    
    
      <category term="硬件" scheme="http://emptycat.com/tags/%E7%A1%AC%E4%BB%B6/"/>
    
  </entry>
  
  <entry>
    <title>HelloWord（测试）</title>
    <link href="http://emptycat.com/2016/07/29/HELLOWORD/"/>
    <id>http://emptycat.com/2016/07/29/HELLOWORD/</id>
    <published>2016-07-29T10:11:54.000Z</published>
    <updated>2016-07-30T10:26:10.396Z</updated>
    
    <content type="html"><![CDATA[<p>你好世界<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">alert(&apos;Hello World!&apos;);</div></pre></td></tr></table></figure><br><a id="more"></a></p>
<p><table><br>    <tr><br>        <td>Foolish</td><br>    </tr><br></table></p>
<iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width="330" height="86" src="http://music.163.com/outchain/player?type=2&id=34586882&auto=1&height=66"></iframe>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;你好世界&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;alert(&amp;apos;Hello World!&amp;apos;);&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;br&gt;
    
    </summary>
    
      <category term="IT" scheme="http://emptycat.com/categories/IT/"/>
    
    
      <category term="TEST" scheme="http://emptycat.com/tags/TEST/"/>
    
      <category term="IT" scheme="http://emptycat.com/tags/IT/"/>
    
  </entry>
  
</feed>
